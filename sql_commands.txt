Основные команды SQL

SHOW DATABASES - SQL-команда, которая отвечает за просмотр доступных баз данных.

CREATE DATABASE - Команда для создания новой базы данных.

USE - С помощью этой SQL-команды USE <database_name> выбирается база данных, необходимая для дальнейшей работы с ней.

DROP DATABASE - Стандартная SQL-команда для удаления целой базы данных.

SHOW TABLES - С помощью этой команды можно увидеть все таблицы, которые доступны в базе данных.

CREATE TABLE - SQL-команда для создания новой таблицы:

CREATE TABLE <table_name1> (
  <col_name1><col_type1>,
  <col_name2><col_type2>,
  <col_name3><col_type3>
  PRIMARY KEY(<col_name1>),
  FOREIGN KEY(<col_name2>) REFERENCES <table_name2>(<col_name2>)

INSERT - Команда INSERT INTO <table_name> в SQL отвечает за добавление данных в таблицу:

INSERT INTO <table_name> (<col_name1>, <col_name2>, <col_name3>, …)
  VALUES (<value1>, <value2>, <value3>, …); 

UPDATE - SQL-команда для обновления данных таблицы:

UPDATE <table_name>
  SET <col_name1> = <value1>, <col_name2> = <value2>, ...
  WHERE <condition>;

DELETE - SQL-команда DELETE FROM <table_name> используется для удаления данных из таблицы.

DROP TABLE - удаление всей таблицы целиком.

SELECT - комманда для получения данных из выбранной таблицы:

SELECT <col_name1>, <col_name2>, …
  FROM <table_name>; 
Следующей командой можно вывести все данные из таблицы:

SELECT * FROM <table_name>;

SELECT DISTINCT - для получения неповторяющихся данных.

WHERE - Можно использовать ключевое для указания условий в запросе:

SELECT <col_name1>, <col_name2>, …
  FROM <table_name>
  WHERE <condition>;
 
В запросе можно задавать следующие условия:

сравнение текста;
сравнение численных значений;
логические операции AND (и), OR (или) и NOT (отрицание).

GROUP BY - часто используется с агрегатными функциями, такими как COUNT, MAX, MIN, SUM и AVG, для группировки выходных значений.

SELECT <col_name1>, <col_name2>, …
  FROM <table_name>
  GROUP BY <col_namex>;

HAVING- Ключевое слово HAVING было добавлено в SQL по той причине, что WHERE не может использоваться для работы с агрегатными функциями.

ORDER BY - используется для сортировки результатов запроса по убыванию или возрастанию. 
ORDER BY отсортирует по возрастанию, если не будет указан способ сортировки ASC или DESC

BETWEEN - используется для выбора значений данных из определённого промежутка.
Могут быть использованы числовые и текстовые значения, а также даты.

LIKE - используется в WHERE, чтобы задать шаблон поиска похожего значения.

Есть два свободных оператора, которые используются в LIKE:

% (ни одного, один или несколько символов);
_ (один символ).

IN - С помощью IN можно указать несколько значений для оператора WHERE.

JOIN - используется для связи двух или более таблиц с помощью общих атрибутов внутри них.

Агрегатные функции
Агрегатные функции используются для получения совокупного результата, относящегося к рассматриваемым данным:

COUNT(col_name) — возвращает количество строк;
SUM(col_name) — возвращает сумму значений в данном столбце;
AVG(col_name) — возвращает среднее значение данного столбца;
MIN(col_name) — возвращает наименьшее значение данного столбца;
MAX(col_name) — возвращает наибольшее значение данного столбца.

Вложенные подзапросы — это SQL-запросы, которые включают выражения SELECT, FROM и WHERE, вложенные в другой запрос.
